// Generated by CoffeeScript 1.6.2
(function() {
  var hasObserver, notify, observe, _observers;

  observe = function(event, observer) {
    if (typeof observer !== "function") {
      throw new TypeError("observer is not a function");
    }
    return _observers(this, event).push(observer);
  };
  hasObserver = function(event, observer) {
    var observers, obsvr, _i, _len;

    observers = _observers(this, event);
    for (_i = 0, _len = observers.length; _i < _len; _i++) {
      obsvr = observers[_i];
      if (obsvr === observer) {
        return true;
      }
    }
    return false;
  };
  notify = function(event) {
    var args, e, observers, obsvr, _i, _len;

    observers = _observers(this, event);
    args = Array.prototype.slice.call(arguments, 1);
    for (_i = 0, _len = observers.length; _i < _len; _i++) {
      obsvr = observers[_i];
      try {
        obsvr.apply(this, args);
      } catch (_error) {
        e = _error;
      }
    }
  };
  tddjs.namespace("util").observable = {
    observe: observe,
    hasObserver: hasObserver,
    notify: notify
  };
  return _observers = function(observable, event) {
    if (!observable.observers) {
      observable.observers = {};
    }
    if (!observable.observers[event]) {
      observable.observers[event] = [];
    }
    return observable.observers[event];
  };
})();
